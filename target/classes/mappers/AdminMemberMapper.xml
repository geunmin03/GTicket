<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gticket.mappers.AdminMemberMapper">

	<!-- 검색 조건 : 공통으로 사용하는 구문 -->
	<sql id="search">
		<if test="searchType != null">
			<!-- 상품명 -->
			<if test="searchType =='name'.toString()">
				where mb_name like '%' || #{keyword} || '%'
			</if>
			<!-- 내용 -->
			<if test ="searchType == 'id'.toString()">
				where mb_id like '%' || #{keyword} || '%'
			</if>
			<!-- 제조사 -->
			<if test ="searchType == 'email'.toString()">
				where mb_email like '%' || #{keyword} || '%'
			</if>
												
			<!-- 상품명 + 내용 -->
			<if test ="searchType == 'name_id'.toString()">
				where (mb_name like '%' || #{keyword} || '%')
				or (mb_id like '%' || #{keyword} || '%')
			</if>
			
			<!-- 상품명 + 내용 + 제조사 -->
			<if test ="searchType == 'all'.toString()">
				where (mb_name like '%' || #{keyword} || '%')
				or (mb_id like '%' || #{keyword} || '%')
				or (mb_email like '%' || #{keyword} || '%')
			</if>
		</if>
	</sql>
	
	<!-- 회원 리스트(검색조건 포함) -->
	<select id="searchListMember" parameterType="SearchCriteria" resultType="MemberVO">
	SELECT 
		mb_id
		, mb_name
		, mb_email
		, mb_zipcode
		, mb_addr
		, mb_addr_d
		, mb_phone
		, mb_nickname
		, mb_accept_e
		, mb_point
		, mb_date_sub
		, mb_date_up
		, mb_date_last
		, mb_authcode
	FROM (
		select 
			mb_id
			, mb_name
			, mb_email
			, mb_zipcode
			, mb_addr
			, mb_addr_d
			, mb_phone
			, mb_nickname
			, mb_accept_e
			, mb_point
			, mb_date_sub
			, mb_date_up
			, mb_date_last
			, mb_authcode
			, row_number() over (order by mb_date_up desc) p_seq 
		FROM member_tbl
		<include refid="search" /> 
		)
	WHERE 1=1
		AND p_seq between #{rowStart} AND #{rowEnd}
	</select>
	
	<!-- 회원 개수 (검색조건 포함) -->
	<select id="searchListCount" parameterType="SearchCriteria" resultType="int">
		<![CDATA[
			select count(mb_id)
			from member_tbl
		]]>
		<include refid="search" />
	</select>
	
	<!-- 회원 상세정보 읽기 -->
	<select id="memberDetail" parameterType="String" resultType="MemberVO">
		SELECT 
			mb_id
			, mb_pw
			, mb_name
			, mb_email
			, mb_zipcode
			, mb_addr
			, mb_addr_d
			, mb_phone
			, mb_nickname
			, mb_accept_e
			, mb_point
			, mb_date_sub
			, mb_date_up
			, mb_date_last
			, mb_authcode
		FROM member_tbl	
		WHERE 1=1
			AND mb_id=#{mb_id}
	</select>
	
	<!-- 회원 저장 -->
	<insert id="insertMember" parameterType="MemberVO">
	insert into member_tbl(
		mb_id
		, mb_pw
		, mb_name
		, mb_email
		, mb_zipcode
		, mb_addr
		, mb_addr_d
		, mb_phone
		, mb_nickname
		, mb_point
		, mb_date_sub
		, mb_date_up
		, mb_date_last
	)
	values (
		#{mb_id}
		, #{mb_pw}
		, #{mb_name}
		, #{mb_email}
		, #{mb_zipcode}
		, #{mb_addr}
		, #{mb_addr_d}
		, #{mb_phone}
		, #{mb_nickname}
		, #{mb_point}
		, sysdate
		, sysdate
		, sysdate
	)
	</insert>
	
	<!-- 상품 수정 -->
	<update id="editMember" parameterType="MemberVO">
		update member_tbl
		set 
			mb_pw=#{mb_pw}
			, mb_name=#{mb_name}
			, mb_email=#{mb_email}
			, mb_zipcode=#{mb_zipcode}
			, mb_addr=#{mb_addr}
			, mb_addr_d=#{mb_addr_d}
			, mb_phone=#{mb_phone}
			, mb_nickname=#{mb_nickname}
			, mb_point=#{mb_point}
			, mb_date_last=sysdate
		where mb_id = #{mb_id}	
	</update>
	
	<!-- 상품 삭제 -->
	<update id="deleteMember" parameterType="MemberVO">
		delete member_tbl
		where mb_id = #{mb_id}	
	</update>
</mapper>

 